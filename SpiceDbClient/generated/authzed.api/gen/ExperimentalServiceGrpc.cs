// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: authzed/api/v1/experimental_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Authzed.Api.V1 {
  /// <summary>
  /// ExperimentalService exposes a number of APIs that are currently being
  /// prototyped and tested for future inclusion in the stable API.
  /// </summary>
  public static partial class ExperimentalService
  {
    static readonly string __ServiceName = "authzed.api.v1.ExperimentalService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.BulkImportRelationshipsRequest> __Marshaller_authzed_api_v1_BulkImportRelationshipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.BulkImportRelationshipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.BulkImportRelationshipsResponse> __Marshaller_authzed_api_v1_BulkImportRelationshipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.BulkImportRelationshipsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.BulkExportRelationshipsRequest> __Marshaller_authzed_api_v1_BulkExportRelationshipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.BulkExportRelationshipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.BulkExportRelationshipsResponse> __Marshaller_authzed_api_v1_BulkExportRelationshipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.BulkExportRelationshipsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.BulkCheckPermissionRequest> __Marshaller_authzed_api_v1_BulkCheckPermissionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.BulkCheckPermissionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Authzed.Api.V1.BulkCheckPermissionResponse> __Marshaller_authzed_api_v1_BulkCheckPermissionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Authzed.Api.V1.BulkCheckPermissionResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.BulkImportRelationshipsRequest, global::Authzed.Api.V1.BulkImportRelationshipsResponse> __Method_BulkImportRelationships = new grpc::Method<global::Authzed.Api.V1.BulkImportRelationshipsRequest, global::Authzed.Api.V1.BulkImportRelationshipsResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "BulkImportRelationships",
        __Marshaller_authzed_api_v1_BulkImportRelationshipsRequest,
        __Marshaller_authzed_api_v1_BulkImportRelationshipsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.BulkExportRelationshipsRequest, global::Authzed.Api.V1.BulkExportRelationshipsResponse> __Method_BulkExportRelationships = new grpc::Method<global::Authzed.Api.V1.BulkExportRelationshipsRequest, global::Authzed.Api.V1.BulkExportRelationshipsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "BulkExportRelationships",
        __Marshaller_authzed_api_v1_BulkExportRelationshipsRequest,
        __Marshaller_authzed_api_v1_BulkExportRelationshipsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Authzed.Api.V1.BulkCheckPermissionRequest, global::Authzed.Api.V1.BulkCheckPermissionResponse> __Method_BulkCheckPermission = new grpc::Method<global::Authzed.Api.V1.BulkCheckPermissionRequest, global::Authzed.Api.V1.BulkCheckPermissionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkCheckPermission",
        __Marshaller_authzed_api_v1_BulkCheckPermissionRequest,
        __Marshaller_authzed_api_v1_BulkCheckPermissionResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Authzed.Api.V1.ExperimentalServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ExperimentalService</summary>
    [grpc::BindServiceMethod(typeof(ExperimentalService), "BindService")]
    public abstract partial class ExperimentalServiceBase
    {
      /// <summary>
      /// BulkImportRelationships is a faster path to writing a large number of
      /// relationships at once. It is both batched and streaming. For maximum
      /// performance, the caller should attempt to write relationships in as close
      /// to relationship sort order as possible: (resource.object_type,
      /// resource.object_id, relation, subject.object.object_type,
      /// subject.object.object_id, subject.optional_relation)
      /// 
      /// EXPERIMENTAL
      /// https://github.com/authzed/spicedb/issues/1303
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Authzed.Api.V1.BulkImportRelationshipsResponse> BulkImportRelationships(grpc::IAsyncStreamReader<global::Authzed.Api.V1.BulkImportRelationshipsRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// BulkExportRelationships is the fastest path available to exporting
      /// relationships from the server. It is resumable, and will return results
      /// in an order determined by the server.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task BulkExportRelationships(global::Authzed.Api.V1.BulkExportRelationshipsRequest request, grpc::IServerStreamWriter<global::Authzed.Api.V1.BulkExportRelationshipsResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Authzed.Api.V1.BulkCheckPermissionResponse> BulkCheckPermission(global::Authzed.Api.V1.BulkCheckPermissionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ExperimentalService</summary>
    public partial class ExperimentalServiceClient : grpc::ClientBase<ExperimentalServiceClient>
    {
      /// <summary>Creates a new client for ExperimentalService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ExperimentalServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ExperimentalService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ExperimentalServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ExperimentalServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ExperimentalServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// BulkImportRelationships is a faster path to writing a large number of
      /// relationships at once. It is both batched and streaming. For maximum
      /// performance, the caller should attempt to write relationships in as close
      /// to relationship sort order as possible: (resource.object_type,
      /// resource.object_id, relation, subject.object.object_type,
      /// subject.object.object_id, subject.optional_relation)
      /// 
      /// EXPERIMENTAL
      /// https://github.com/authzed/spicedb/issues/1303
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Authzed.Api.V1.BulkImportRelationshipsRequest, global::Authzed.Api.V1.BulkImportRelationshipsResponse> BulkImportRelationships(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkImportRelationships(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BulkImportRelationships is a faster path to writing a large number of
      /// relationships at once. It is both batched and streaming. For maximum
      /// performance, the caller should attempt to write relationships in as close
      /// to relationship sort order as possible: (resource.object_type,
      /// resource.object_id, relation, subject.object.object_type,
      /// subject.object.object_id, subject.optional_relation)
      /// 
      /// EXPERIMENTAL
      /// https://github.com/authzed/spicedb/issues/1303
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Authzed.Api.V1.BulkImportRelationshipsRequest, global::Authzed.Api.V1.BulkImportRelationshipsResponse> BulkImportRelationships(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_BulkImportRelationships, null, options);
      }
      /// <summary>
      /// BulkExportRelationships is the fastest path available to exporting
      /// relationships from the server. It is resumable, and will return results
      /// in an order determined by the server.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.BulkExportRelationshipsResponse> BulkExportRelationships(global::Authzed.Api.V1.BulkExportRelationshipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkExportRelationships(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// BulkExportRelationships is the fastest path available to exporting
      /// relationships from the server. It is resumable, and will return results
      /// in an order determined by the server.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Authzed.Api.V1.BulkExportRelationshipsResponse> BulkExportRelationships(global::Authzed.Api.V1.BulkExportRelationshipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_BulkExportRelationships, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.BulkCheckPermissionResponse BulkCheckPermission(global::Authzed.Api.V1.BulkCheckPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkCheckPermission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Authzed.Api.V1.BulkCheckPermissionResponse BulkCheckPermission(global::Authzed.Api.V1.BulkCheckPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkCheckPermission, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.BulkCheckPermissionResponse> BulkCheckPermissionAsync(global::Authzed.Api.V1.BulkCheckPermissionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkCheckPermissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Authzed.Api.V1.BulkCheckPermissionResponse> BulkCheckPermissionAsync(global::Authzed.Api.V1.BulkCheckPermissionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkCheckPermission, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ExperimentalServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ExperimentalServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ExperimentalServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_BulkImportRelationships, serviceImpl.BulkImportRelationships)
          .AddMethod(__Method_BulkExportRelationships, serviceImpl.BulkExportRelationships)
          .AddMethod(__Method_BulkCheckPermission, serviceImpl.BulkCheckPermission).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ExperimentalServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_BulkImportRelationships, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Authzed.Api.V1.BulkImportRelationshipsRequest, global::Authzed.Api.V1.BulkImportRelationshipsResponse>(serviceImpl.BulkImportRelationships));
      serviceBinder.AddMethod(__Method_BulkExportRelationships, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Authzed.Api.V1.BulkExportRelationshipsRequest, global::Authzed.Api.V1.BulkExportRelationshipsResponse>(serviceImpl.BulkExportRelationships));
      serviceBinder.AddMethod(__Method_BulkCheckPermission, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Authzed.Api.V1.BulkCheckPermissionRequest, global::Authzed.Api.V1.BulkCheckPermissionResponse>(serviceImpl.BulkCheckPermission));
    }

  }
}
#endregion
